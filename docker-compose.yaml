version: "3"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.0
    ports:
      - "2181:2181"
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka0: &broker-default
    image: confluentinc/cp-kafka:6.0.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment: &default-broker-env
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: "INTERNAL://kafka0:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka0:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
  kafka1:
    <<: *broker-default
    ports:
      - "9093:9093"
    environment:
      <<: *default-broker-env
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: "INTERNAL://kafka1:29093,EXTERNAL://:9093"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka1:29093,EXTERNAL://localhost:9093"
  kafka2:
    <<: *broker-default
    ports:
      - "9094:9094"
    environment:
      <<: *default-broker-env
      KAFKA_BROKER_ID: 2
      KAFKA_LISTENERS: "INTERNAL://kafka2:29094,EXTERNAL://:9094"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka2:29094,EXTERNAL://localhost:9094"

  kafka-cli:
    image: frser/kafka-cli:2.6.0
    environment:
      BOOTSTRAP_SERVER: kafka0:29092
      CREATE_TOPICS: >-
        __debezium.dbhistory:3:3,
        main:1:3,
        main.dbo.ship:1:3,
        main.dbo.train:1:3,
    depends_on:
      - kafka0
      - kafka1
      - kafka2

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-CU8-ubuntu-16.04
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Passw0rdOfs3cr3ts
      MSSQL_AGENT_ENABLED: "true"
    ports:
      - 1433:1433

  sqlserver-cli:
    image: mcr.microsoft.com/mssql-tools
    command: /opt/mssql-tools/bin/sqlcmd -S sqlserver -U SA -P Passw0rdOfs3cr3ts -i /seeds/sqlserver.sql
    volumes:
      - ./database_inserts/:/data/
      - ./seeds/:/seeds/
    depends_on:
      - sqlserver

  kafka-connect: &connect-default
    build:
      context: ./docker
      dockerfile: ./DockerfileKafkaConnect
    ports:
      - "8083:8083"
    environment: &default-connect-env
      # CONNECT_LOG4J_LOGGERS: org.apache.kafka.connect=DEBUG
      CONNECT_BOOTSTRAP_SERVERS: "kafka0:29092,kafka1:29093,kafka2:29094"
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_GROUP_ID: connect
      CONNECT_PLUGIN_PATH: "/usr/share/confluent-hub-components"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-config"
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-offset"
      CONNECT_STATUS_STORAGE_TOPIC: "connect-status"
    depends_on:
      - kafka0
      - kafka-connect-1
  kafka-connect-1:
    <<: *connect-default
    ports:
      - "8085:8085"
    environment:
      <<: *default-connect-env
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect-1
      CONNECT_REST_ADVERTISED_PORT: "8085"
      CONNECT_REST_PORT: "8085"
    depends_on:
      - kafka0

  postgres:
    image: postgres:12-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "SA"
      POSTGRES_PASSWORD: "Passw0rdOfs3cr3ts"
      POSTGRES_DB: "kafka"
    volumes:
      - ./seeds/postgres.sql:/docker-entrypoint-initdb.d/postgres.sql

  wait-for-db:
    image: dadarek/wait-for-dependencies
    depends_on:
      - postgres
      - sqlserver
    command: postgres:5432 sqlserver:1433

  faust:
    build:
      context: ./
      dockerfile: ./docker/DockerfileFaust
    environment:
      POSTGRES_URI: "postgresql://SA:Passw0rdOfs3cr3ts@postgres:5432/kafka"
      KAFKA_SERVER: "kafka0:29092,kafka1:29093,kafka2:29094"
    depends_on:
      - postgres
      - kafka0
